plot(silhout1)
a=
1
if (a==1) {message("its a")}
}
if (a==1) {message("its a")}
devtools::load_all(".")
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pp",silhmethod = "cer")
plot(silhout1)
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pd",silhmethod = "cer")
plot(silhout1)
devtools::load_all(".")
devtools::load_all(".")
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pd",silhmethod = "cer")
plot(silhout1)
devtools::load_all(".")
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pd",silhmethod = "cer")
plot(silhout1)
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- silhobj(out$membership,pmtype = "sim",silhmethod = "pac")
plot(silhout1)
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- silhobj(out$membership,pmtype = "sim",silhmethod = "silh")
plot(silhout1)
devtools::load_all(".")
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pd",silhmethod = "cer")
plot(silhout1)
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pd",silhmethod = "pacs")
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pd",silhmethod = "pac")
plot(silhout1)
library(cluster)
out <- fanny(iris[,-5], 3)
silhout1 <- ppsilhobj(out$membership,average = "crisp",pptype = "pd",silhmethod = "silh")
plot(silhout1)
devtools::load_all(".")
?silhobj
x= c(1:10)
plot(c)
summary(x)
?aov
?silhobj
library(cluster)
out <- fanny(iris[,-5], 3)
silhout <- silhobj(out$membership)
plot(silhout)
library(cluster)
out <- fanny(iris[,-5], 3)
silhout <- silhobj(out$membership)
plot(silhout,print.summary = FALSE)
library(cluster)
out <- fanny(iris[,-5], 3)
silhout <- silhobj(out$membership)
plot(silhout,label = TRUE)
factoextra::fviz_silhouette
library(mclust)
out1 <- Mclust(iris[,-5], 3)
silhout1 <- silhobj(out1$z)
plot(silhout1)
factoextra::fviz_silhouette
out = kmean(iris[,-5],3)
out = kmeans(iris[,-5],3)
out
iris[,-5]
out$centers
?ppsilhobj
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Use only numeric features
iris_numeric <- iris[, 1:4]
# Run k-means clustering (e.g., 3 clusters)
set.seed(42)
kmeans_result <- kmeans(iris_numeric, centers = 3)
# Extract cluster centers
centroids <- kmeans_result$centers
# Compute distance matrix (obs x clusters)
# Using base R:
distance_matrix <- as.matrix(dist(rbind(centroids, iris_numeric)))[-(1:3), 1:3]
# Or better: use proxy or custom function for clarity
# Here's a better way using `proxy` package:
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris_numeric, centroids)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
# Result: 150 observations x 3 clusters
print(dim(distance_matrix))  # Should be 150 x 3
head(distance_matrix)
distance_matrix
# Load the iris dataset
data(iris)
# Use only numeric features
iris_numeric <- iris[, 1:4]
iris[, 1:4]
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
distance_matrix
silhobj(pm = distance_matrix,pmtype = "disim")
silhobj(pm = distance_matrix,pmtype = "dissim")
out = silhobj(pm = distance_matrix,pmtype = "dissim")
out
plot(out)
devtools::load_all(".")
?silhobj
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
devtools::load_all(".")
?silhobj
devtools::load_all(".")
?silhobj
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
?dist
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
kmeans_result$centers
iris[, 1:4]
dist(rbind(kmeans_result$centers, iris[, 1:4]))
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
distance_matrix
install.packages("proxy")
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris_numeric, centroids)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
distance_matrix
class(distance_matrix)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
distance_matrix
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
?dist
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
