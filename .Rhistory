plot(out)
devtools::load_all(".")
devtools::load_all(".")
?silhobj
devtools::load_all(".")
?silhobj
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
?dist
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
kmeans_result$centers
iris[, 1:4]
dist(rbind(kmeans_result$centers, iris[, 1:4]))
# Compute distance matrix (obs x clusters)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
distance_matrix
install.packages("proxy")
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris_numeric, centroids)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
distance_matrix
class(distance_matrix)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
distance_matrix
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# install.packages("proxy") # if not already installed
library(proxy)
distance_matrix <- proxy::dist(iris[, 1:4], kmeans_result$centers)
# Convert to matrix
distance_matrix <- as.matrix(distance_matrix)
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
?dist
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
example("silhobj")
devtools::load_all(".")
?silhobj
example("silhobj")
devtools::check()
devtools::load_all(".")
devtools::check()
devtools::load_all(".")
example("silhobj")
example("silhobj")
?silhobj
devtools::load_all(".")
?silhobj
example("silhobj")
install.packages(c("dplyr", "ggplot2", "ggpubr"))
devtools::load_all(".")
install.packages("proxy")
library(proxy)
data("iris")
d = iris[,-5]
d
kmeans(d,3)
o = kmeans(d,3)
proxy::dist(iris,o$centers)
class(iris)
class(o$cluster)
class(o$centers)
d  =as.matrix(d)
class(d)
proxy::dist(iris,o$centers)
proxy::dist(d,o$centers)
d=proxy::dist(d,o$centers)
d
silhobj(d,"d")
o1= silhobj(d,"d")
o1
plot(o1)
library(dplyr)
library(ggplot2)
library(ggpubr)
plot(o1)
library(mclust)
data("banknote")
banknote
db = as.matrix(banknote[,-1])
table(banknote$Status)
mclust(db,2)
o2=Mclust(db,2)
s2=silhobj(o2$z)
plot(s2)
s22=silhobj("z",clust_function = "Mclust",db,2)
s22=silhobj("z","sim",silhmethod = "p",clust_function = "Mclust",db,2)
s22=silhobj("z","sim",silhmethod = "p",clust_function = "Mclust,db,2)
s22=silhobj("z","sim",silhmethod = "p",clust_function = "Mclust",db,2)
o2=Mclust(db,2)
plot(02)
o2 = Mclust(db,2)
s2 = silhobj(o2$z)
plot(s2)
dis2 = proxy::dist(db,o2$parameters$mean)
dis2 = proxy::dist(as.matrix(db),o2$parameters$mean)
dis2 = proxy::dist(as.matrix(db),o2$parameters$mean)
db = banknote[,-1]
db
db = as.matrix(banknote[,-1])
dis2 = proxy::dist(as.matrix(db),o2$parameters$mean)
o2$parameters$mean
dis2 = proxy::dist(as.matrix(db),t(o2$parameters$mean))
s3 = silhobj(dis2,"d")
plot(s3)
s4 = silhobj(dis2,"d","p")
plot(s4)
plot(s3)
?silhobj
s4 = silhobj(dis2,"z","p")
s4 = silhobj(dis2,"s","p")
class(s3)
library(biclust)
data("SyntrenEcoli")
?SyntrenEcoli
library(mclust)
library(cluster)
data(pluton)
?pluton
?SyntrenEcoli
library(blockclusterPDQ)
blockclusterPDQ::BPDQ(pluton, 2,3,blockdist = "seq")
devtools::load_all(".")
blockclusterPDQ::BPDQ(pluton, 2,3,blockdist = "seq")
install.packages(c("cli", "data.table", "generics", "labelled", "modeltools", "pbkrtest", "pkgdown", "R.cache", "R.oo", "RcppArmadillo", "reformulas", "rtkore", "scales", "systemfonts", "textshaping", "utf8", "zip"))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(Silhouette)
# Load the iris dataset
data(iris)
# Run k-means clustering (e.g., 3 clusters)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
distance_matrix <- as.matrix(dist(rbind(kmeans_result$centers, iris[, 1:4])))[-(1:3), 1:3]
out = silhobj(pm = distance_matrix,pmtype = "dissim")
plot(out)
devtools::load_all(".")
?Silhouette
?FPDclustering
??FPDclustering
??Silhouette
?FPDclustering::GPDC
?Silhouette::silhobj
3
2
2
2
2
2
2
36^126
36^16
36^6
36^10
36^9
36^7
36^10
36^8
10^6
10^5
10^4
