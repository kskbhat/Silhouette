% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Silhouette.R
\name{Silhouette}
\alias{Silhouette}
\title{Calculate Silhouette Width for Clustering}
\usage{
Silhouette(
  prox_matrix,
  proximity_type = c("dissimilarity", "similarity"),
  method = c("medoid", "pac"),
  prob_matrix = NULL,
  a = 2,
  print.summary = TRUE,
  clust_fun = NULL,
  ...
)
}
\arguments{
\item{prox_matrix}{A numeric matrix where rows represent observations and columns represent proximity measures (e.g., distances or similarities) to clusters. Typically, this is a membership or dissimilarity matrix from clustering results. If \code{clust_fun} is provided, \code{prox_matrix} should be the name of the matrix component as a string.}

\item{proximity_type}{Character string specifying the type of proximity measure in \code{prox_matrix}. Options are \code{"similarity"} (higher values indicate closer proximity) or \code{"dissimilarity"} (lower values indicate closer proximity). Defaults to \code{"dissimilarity"}.}

\item{method}{Character string specifying the silhouette calculation method. Options are \code{"pac"} (Probability of Alternative Cluster) or \code{"medoid"}. Defaults to \code{"medoid"}.}

\item{prob_matrix}{A numeric matrix where rows represent observations and columns represent cluster membership probabilities (or transformed probabilities, depending on \code{prob_type}). If \code{clust_fun} is provided, \code{prob_matrix} should be the name of the matrix component as a string (e.g., \code{"u"} for \code{fcm}). When not \code{NULL}, fuzzy silhouette width is calculated. Defaults to \code{NULL} for crisp silhouette.}

\item{a}{Numeric value controlling the weight calculation based on membership difference for fuzzy silhouettes. Must be positive. Defaults to \code{2}.}

\item{print.summary}{Logical; if \code{TRUE}, prints a summary table of average silhouette widths and sizes for each cluster. Defaults to \code{TRUE}.}

\item{clust_fun}{Optional S3 or S4 function object specifying a clustering function that produces the proximity measure matrix. For example, \code{fanny}. If provided, \code{prox_matrix} must be the name of the matrix component in the clustering output (e.g., \code{"membership"} for \code{fanny} when \code{proximity_type = "similarity"}). Defaults to \code{NULL}.}

\item{...}{Additional arguments passed to \code{clust_fun}, such as \code{x,centers} for \code{fcm}.}
}
\value{
A list of class \code{"silhouette"} with the following components:
\describe{
\item{widths}{A data frame containing cluster assignments, nearest neighbor clusters, and silhouette widths for each observation.}
\item{clus.avg.widths}{A named numeric vector of average silhouette widths per cluster.}
\item{avg.width}{A numeric value representing the overall average silhouette width across all observations.}
}
}
\description{
Computes the silhouette width for each observation based on clustering results, measuring how similar an observation is to its own cluster compared to other clusters. The silhouette width ranges from -1 to 1, where higher values indicate better cluster cohesion and separation.
}
\details{
The \code{Silhouette} function employs the Simplified Silhouette method introduced by Van der Laan et al. (2003), differing from the original silhouette method proposed by Rousseeuw (1987).

It evaluates clustering quality using a proximity matrix, denoted as \eqn{\Delta = [\delta_{ik}]_{n \times K}} for dissimilarity measures or \eqn{\Delta' = [\delta'_{ik}]_{n \times K}} for similarity measures. Here, \eqn{i = 1, \ldots, n} represents the number of observations, and \eqn{k = 1, \ldots, K} denotes the number of clusters. The elements \eqn{\delta_{ik}} indicate dissimilarity (e.g., distance) between observation \eqn{i} and cluster \eqn{k}, while \eqn{\delta'_{ik}} represent similarity between observation with the cluster \eqn{k}.

The silhouette width \eqn{S(x_i)} for observation \eqn{i} is calculated based on the proximity type. For dissimilarity measures, it is given by:
\deqn{S(x_i) = \dfrac{(\min_{k' \neq k} \delta_{ik'}) - \delta_{ik}}{N(x_i)},}
where \eqn{\min_{k' \neq k} \delta_{ik'}} is the smallest dissimilarity to any other cluster \eqn{k' \neq k}. For similarity measures, it is:
\deqn{S(x_i) = \dfrac{\delta'_{ik} - (\max_{k' \neq k} \delta'_{ik'})}{N(x_i)},}
where \eqn{\max_{k' \neq k} \delta'_{ik'}} is the largest similarity to any other cluster and \eqn{N(x_i)} is the normaliser.

The Normaliser depends on the \code{method} argument:

for \code{medoid}, it is \eqn{\max(\delta_{ik}, \min_{k' \neq k} \delta_{ik'})} (dissimilarity) or \eqn{\max(\delta'_{ik}, \max_{k' \neq k} \delta'_{ik'})} (similarity);
for \code{pac}, it is \eqn{\delta_{ik} + \min_{k' \neq k} \delta_{ik'}} (dissimilarity) or \eqn{\delta'_{ik} + \max_{k' \neq k} \delta'_{ik'}} (similarity).

When \code{prob_matrix} is \code{NULL}, the function computes the crisp overall silhouette index \eqn{CS} as:
\deqn{CS = \frac{1}{n} \sum_{i=1}^{n} S(x_i).}
This represents the average silhouette width across all observations, providing a measure of overall clustering quality.

If \code{prob_matrix} is provided, it is denoted as \eqn{\Gamma = [\gamma_{ik}]_{n \times K}}, where \eqn{\gamma_{ik}} represents the membership probability of observation \eqn{i} to cluster \eqn{k}. The fuzzy silhouette index \eqn{FS} is then calculated as:
\deqn{FS = \frac{\sum_{i=1}^{n} \left( \gamma_{ik} - \max_{k' \neq k} \gamma_{ik'} \right)^{\alpha} S(x_i)}{\sum_{i=1}^{n} \left( \gamma_{ik} - \max_{k' \neq k} \gamma_{ik'} \right)^{\alpha}},}
where \eqn{\alpha} (set by the argument \code{a}) controls the weighting based on membership differences. Higher \eqn{\alpha} values emphasize observations with more confident cluster assignments, accounting for uncertainty in fuzzy clustering.
}
\examples{
# Standard silhouette with k-means on iris dataset
data(iris)
kmeans_result <- kmeans(iris[, 1:4], centers = 3)
# Compute distance matrix
dist_mat <- as.matrix(dist(rbind(kmeans_result$centers,
                                iris[, 1:4])))[-(1:3), 1:3]
out <- Silhouette(prox_matrix = dist_mat)
plot(out)

  # Scree plot for optimal clusters (2 to 7)
if (requireNamespace("ppclust", quietly = TRUE)) {
  library(ppclust)
  data(iris)
  avg_sil_width <- numeric(6)
  for (k in 2:7) {
    avg_sil_width[k-1] <- Silhouette(
      prox_matrix = "d",
      proximity_type = "dissimilarity",
      prob_matrix = "u",
      clust_fun = ppclust::fcm,
      x = iris[, 1:4],
      centers = k,
      print.summary = FALSE
    )$avg.width
  }
  plot(avg_sil_width, type = "o",
       ylab = "Overall Silhouette Width",
       xlab = "Number of Clusters",
       main = "Scree Plot")
} else {
  message("Install 'ppclust': install.packages('ppclust')")
}
}
\references{
Rousseeuw, P. J. (1987). Silhouettes: A graphical aid to the interpretation and validation of cluster analysis. \emph{Journal of Computational and Applied Mathematics}, 20, 53--65. \doi{10.1016/0377-0427(87)90125-7}

Van der Laan, M., Pollard, K., & Bryan, J. (2003). A new partitioning around medoids algorithm. \emph{Journal of Statistical Computation and Simulation}, 73(8), 575--584. \doi{10.1080/0094965031000136012}

Raymaekers, J., & Rousseeuw, P. J. (2022). Silhouettes and quasi residual plots for neural nets and tree-based classifiers. \emph{Journal of Computational and Graphical Statistics}, 31(4), 1332--1343. \doi{10.1080/10618600.2022.2050249}

Campello, R. J., & Hruschka, E. R. (2006). A fuzzy extension of the silhouette width criterion for cluster analysis. \emph{Fuzzy Sets and Systems}, 157(21), 2858--2875. \doi{10.1016/j.fss.2006.07.006}

Bhat, K.S., Kiruthika. Some density-based silhouette diagnostics for soft clustering algorithms. \emph{Communications in Statistics: Case Studies, Data Analysis and Applications}, 10(3–4), 221–238 (2024). \doi{10.1080/23737484.2024.2408534}
}
\seealso{
\code{\link{softSilhouette}}, \code{\link{plot.Silhouette}}
}
